variables:
all variables must start and end with a dollar sign.
Example:
$x$
Variables are case sensitive, so $x$ is different from $X$
The variable $return$ is RESERVED. It is internally used to return values from macros
To assign an initial value to a var the eval command must be used:
eval $x$,1
corresponds to $x$=1

When program is executed and the connect button is pressed the variables (temperature etc.) will be automatically appended to log.txt file.
The following header is added first
----------------------------------
-         PROCESS STARTS         -
----------------------------------
date time
When the disconnect button is pressed the logging is interrupted and the following text is appended to log.txt:
---------------------------------
-         PROCESS ENDED         -
---------------------------------
date time
This helps to find the log data in the file.


log')==0: #print string to log file
("ERROR in log method","use: log text")
The command add the text to the log queue.
variables contained in text will be replaced automatically.
Example1:
log sample taken
it writes 'sample taken' into the log queue
Example2:
eval $x$,1
log x=$x$
it writes 'x=1' in the log queue

('buffer')==0: #buffer all commands, send later. Used for long gcode sequence where send will fail

('print')==0: #buffer all commands, send later. Used for long gcode sequence where send will fail

ask')==0: #if ask, make question to user
("ERROR in ask method","use: ask $varname$,title,question,initialvalue,minvalue,maxvalue")
buffer
ask $ML$,Syringe 1,Enter how many ml to put,10,10,60
macro "syr1_X_ml"$ML$
print

('eval')==0: #we've to calculate somethg
("ERROR in eval method","use: eval $varname$,math_expression")
eval $ml$,185-$1$*3.08334
macro "valve_X_exit_2"0
send G1 Z$ml$,0;suck
send M400,0
macro "valve_X_exit_1"0
macro "valve_X_exit_2"1
send G1 Z185,0;eject
send M400,0
log loaded $ml$ ml from syringe 1


('exec')==0: #we've to execute somethg
("ERROR in eval method","use: exec code!,varname1=$var1$,...")      

('macro')==0: #we've to call a nested macro
("ERROR in macro call",'use: macro "macroname" var1,var2..')
macro "syr1_X_ml"20

('echo')==0: #we've to echo to the console
("ERROR in echo method","use: echo text $varname$")
ask $X$,Vial X position,Enter vial X position,1,1,8
ask $Y$,Vial Y position,Enter vial Y position,1,1,6
eval $X$,58-($X$-1)*15.71328
eval $Y$,121+($Y$-1)*14.8
echo X=$X$    Y=$Y$

('send')==
("ERROR in send method","use: send command,where")
send G28 X Y,1